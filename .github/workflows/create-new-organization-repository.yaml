# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: create-new-organization-repository
on:
  workflow_dispatch:
    inputs:
      name_of_new_repo:
        description: ''
        required: false
        default: new-project
      template_repo:
        description: 'https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/creating-a-template-repository'
        required: false
        default: vorprog/ui-template
env:
  GITHUB_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
  GITHUB_ACTOR: ${{ github.actor }}
  ORGANIZATION: vorprog
  REPO_NAME: ${{ github.event.inputs.name_of_new_repo }}
  TEMPLATE_REPO: ${{ github.event.inputs.template_repo }}
  BRANCH_PROTECTION_RULES: >-
    {
      "required_pull_request_reviews": {
        "require_code_owner_reviews": true
      },
      "restrictions": {
        "teams": [ "vorprog/admins" ]
      }
    }
jobs:
  create-repo:
    defaults:
      run:
        shell: bash -ex {0} # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
    runs-on: ubuntu-latest
    steps: # if [[ $ADMIN_USERS ~= $GITHUB_ACTOR ]]; then echo "User $GITHUB_ACTOR is not on the admins team!" && exit 1; fi
      - run: |
          export ADMIN_USERS=$(gh api /orgs/$ORGANIZATION/teams/admins/members --jq '.[].login')
          gh api -H 'Accept: application/vnd.github.v3.raw+json' /repos/$TEMPLATE_REPO/generate -f body='{ "owner": "$ORGANIZATION", "name": "$REPO_NAME" }'
          gh api -H 'Accept: application/vnd.github.v3.raw+json' /repos/$ORGANIZATION/$REPO_NAME/branches/main/protection -f body='$BRANCH_PROTECTION_RULES'
